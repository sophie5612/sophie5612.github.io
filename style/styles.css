/* All styling done in this file using responsive values with media queries */
/* Creating CSS variables to hold the color palette */

/* TODO: Define a color palette (https://ogkcreative.com/development/8-html-css-tips-for-organizing-code-in-your-web-project/)*/
:root {
    /* --primary-color:  hsl(0, 0%, 0%); */
    --primary-color: hsl(100, 100%, 100%);
    --secondary-color:  hsl(320, 100%, 8%);
    --translucent-color: hsl(100, 100%, 100%,.25);
    --width: calc(100% - 4rem);
    --padding: calc(8px + 1.5625vw); /* Using "Magic formula" for responsive padding. Reference: https://matthewjamestaylor.com/responsive-padding */
}

/* Override the default styling to start from scratch ('*' applies to all HTML elements) */
* {
    padding: 0;
    margin: 0;
    max-width: 100vw;
}

/* TODO: import a font-family using @font-face */
/* @font-face {
    font-family: "Jomolhari";
    src: url();
} */

.bio{
    display: flexbox;
    /* max-width: 50px; */
}

/* 'display:flex', 'min-height:100vh', 'flex-direction:column' and 'justify-content:flex-start' to push Footer to the bottom of the screen with 'margin-top:auto'. Reference: https://stackoverflow.com/questions/4575826/how-to-push-a-footer-to-the-bottom-of-page-when-content-is-short-or-missing#:~:text=44-,While,-this%20question%20is */
body {
    line-height: 1.5rem;
    display: flex;
    min-height: 100vh;
    flex-direction: column;
    justify-content: flex-start;
}

/* ul bullet list styling */
.bullet-list{
    margin-left: 5vw;
}

.bullet-list li{
    padding-top:5px;
    padding-bottom:5px;
    /* Unselectable items */
    user-select: none;
}

.bullet-list li:hover{
    color:red;
}

/* Set state of list item when it's been checked */
.bullet-list li.checked{
    text-decoration: line-through;
    color:red;
}

.bullet-list li.checked::before {
    content: '';

}

.container {
    width: var(--width);
    margin: auto;
}

/* Verticle padding slightly reduced */
.contact-icon{
    padding-top:1.5vh;
    padding-bottom:1.5vh;
}

/* 'padding:10px' seems to work the best with flexbox styling and "Magic ratio" */
.current-page{
    background-color:  var(--secondary-color);
    color: var(--primary-color);
    padding:10px;
    border-radius: 5px;
}

/* 'margin-top: auto' to press footer to bottom of page, 'display:flex', 'flex-direction:column', 'align-items:center' to vertically centerfooter content */
footer {
    margin-top: auto;
    background-color: var(--primary-color);
    display: flex;
    align-items: center;
    flex-direction: column;
    border-top: 1px solid var(--secondary-color)
}

/* horizontal padding to add space between footer items */
footer li {
    padding-right: calc(20px + 1.5625vw);
    padding-left: calc(20px + 1.5625vw);

}

footer li a {text-decoration: underline;}

footer ul {
    list-style-type: none;
    display: flex;
    padding-top:5px;
}

/* 'position:sticky' is offset according to nearest scrolling ancestor (i.e. body tag with default 'position:static') with top, bottom, right, and left */
header {
    background-color: var(--primary-color);
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    padding: var(--padding);
    border-bottom: 1px solid var(--secondary-color); /* Reference: https://www.digitalocean.com/community/tutorials/how-to-load-and-use-custom-fonts-with-css  */
}

header h1 {
    display: inline-block;
    width: fit-content;
    padding-right: var(--padding);
    color: var(--secondary-color);
    font-weight: 700;
    font-size: 1.25rem; /* Setting 'h1' tags to 1.5 the root font-size */
}

/* Setting root HTML. 'font-size:125%' to use rem scalable font sizes, 'background-attachment:fixed' to stretch background over entire root view */
html {
    font-size: 125%;
    /* Set the root-size to 125% of default 16px value (20px) */
    font-family: 'Archivo Narrow', sans-serif;
    letter-spacing: .05vw;
    color: var(--secondary-color);
    background-attachment: fixed;
    background-color: var(--primary-color);
    /* background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1); */
     /*Gradient generated by: https://mycolor.space/gradient3?ori=circle&hex=%23FFFFFF&hex2=%23FFBDDD&hex3=%23FFBDDD&submit=submit */
}
.introduction-container{display:flex;}


li {padding-left: var(--padding);
}


/* 'text-decoratin:none' for no underline */
li a {
    color: var(--secondary-color);
    text-decoration: none;
}

li a img{ max-height: 8vh;}

/* 'main' tag encapsulates everything not in header and footer */
main {
    width: 100vw;
    padding-top: var(--padding);
    padding-bottom: var(--padding);
    color: (var(--primary-color));
}

/* Use 'list-style-type:none' to remove bullets, 'display:flex' to have internal objects best fill space */
nav ul {
    list-style-type: none;
    display: flex;
}

.nav-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 2vh;
}

p {
    margin: auto;
    padding: var(--padding);
    background-color:var(--translucent-color);
    border-radius: 25px;
}

.portrait{
    border-radius: 50%;
    max-height: 25vh;
    display: flexbox;
    background-color: var(--translucent-color) ;
    border: 1px solid var(--secondary-color);
}

.strike {text-decoration: line-through;}

/* 
.table-container{
    display:grid;
    /* box-sizing: border-box; */
    /* width: 70vw; */
    /* background-color: aqua;
    grid-template-columns: 1fr, 3fr, 1fr;
    padding:1em; */
/* } */ 

/* 'border-collapse' sets table border model to no lines*/
table {
    border-collapse: collapse;
    width: fit-content;
}
td, th{
    text-align: left;
    padding: 1.5vw;
    padding-bottom: 1vw;
    /* background-color: aqua; */
} 
/* Use grid system to allow last cell to take full width, combined with wideth of first column */
/* .expanded-row-content{
    display: grid; */
    /* grid-row:auto; */
    /* grid-column: 1/-1; */
/* } */
/* Hide last cell content, which is pushed to next line */
/* .hide-row{
    display: none;
} */
/* Making table rows as grids, provding styling for n-1 columns. Reference: https://medium.com/@chhikaradi/expandable-table-row-css-grid-54f4ff72fb56 */
/* tr{
    grid-template-rows: repeat(1, 1fr); */
    /* grid-template-columns: 200px, 200px, ; */
    /* grid-template-columns: repeat(2, 1fr); */
    /* justify-content: flex-start;
}
td:first-of-type:hover{
    background-color: aquamarine !important;
} */

.resume{
    height: 100vh;
    width: 75vw;
    align-self: center;
    border: 3px solid black;
    margin-top: 2vh;
    margin-bottom: 3vh; 
}
.workspace{
    height: 75vh;
    width: 75vw;
    align-self: center;
    border: 3px solid black;
    margin-top: 2vh;
    margin-bottom: 3vh; 
}

.workspace-container{
    display:contents;
    position:fixed;
}

/* Adding media queries for scalable site across screen sizes for responsive design */
@media (max-width: 800px) {
    html {
        font-size: 1rem
    }

    li {
        font-size: 90%;
        padding: calc(.25px + 1.5625vw);
    }

}

/* Media query for typical mobile width */
@media (max-width: 480px) {
    html { font-size: .8rem;}

    li {
        font-size: 80%;
        padding: calc(.15px + 1.5625vw);
    }

    li a img{
        max-height: 5vh;
    }

    .portrait{ max-height: 15vh;}
}

/* Media query for tiny width view */
@media (max-width: 300px) {
    html {
        font-size: .5rem;
    }
    li a img{
        max-height: 3vh;
    }
    .portrait{
        max-height: 5vh;;
    }

}

/* Random CSS Notes */
/* 'display:inline only' takes as much space as necessary, doesn't start on a new line */
/* 'position:absolute' means element will position itself according to it's nearest posiitoned element */
/* 'position:relative' has element position itself relative to its normal placement useing top, bottom, right, and left (AKA move where it is drawn) */